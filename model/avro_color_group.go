// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     data.avsc
 */

package model

import (
	"github.com/actgardner/gogen-avro/compiler"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
	"io"
)

type AvroColorGroup struct {
	Id int32

	Name string

	Colors []string
}

func NewAvroColorGroup() *AvroColorGroup {
	return &AvroColorGroup{}
}

func DeserializeAvroColorGroup(r io.Reader) (*AvroColorGroup, error) {
	t := NewAvroColorGroup()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeAvroColorGroupFromSchema(r io.Reader, schema string) (*AvroColorGroup, error) {
	t := NewAvroColorGroup()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeAvroColorGroup(r *AvroColorGroup, w io.Writer) error {
	var err error

	err = vm.WriteInt(r.Id, w)
	if err != nil {
		return err
	}

	err = vm.WriteString(r.Name, w)
	if err != nil {
		return err
	}

	err = writeArrayString(r.Colors, w)
	if err != nil {
		return err
	}

	return err
}

func (r *AvroColorGroup) Serialize(w io.Writer) error {
	return writeAvroColorGroup(r, w)
}

func (r *AvroColorGroup) Schema() string {
	return "{\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"colors\",\"type\":{\"items\":\"string\",\"type\":\"array\"}}],\"name\":\"AvroColorGroup\",\"namespace\":\"model\",\"type\":\"record\"}"
}

func (r *AvroColorGroup) SchemaName() string {
	return "model.AvroColorGroup"
}

func (_ *AvroColorGroup) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetString(v string)   { panic("Unsupported operation") }
func (_ *AvroColorGroup) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *AvroColorGroup) Get(i int) types.Field {
	switch i {

	case 0:

		return (*types.Int)(&r.Id)

	case 1:

		return (*types.String)(&r.Name)

	case 2:

		r.Colors = make([]string, 0)

		return (*ArrayStringWrapper)(&r.Colors)

	}
	panic("Unknown field index")
}

func (r *AvroColorGroup) SetDefault(i int) {
	switch i {

	}
	panic("Unknown field index")
}

func (_ *AvroColorGroup) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *AvroColorGroup) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *AvroColorGroup) Finalize()                        {}
